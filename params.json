{"google":"","note":"Don't delete this file! It's used internally to help with page regeneration.","tagline":"PowerShell-flavored Ack... let's find some text!","name":"Find-String","body":"\r\n# Find-String\r\n\r\nFind-String is a PowerShell script whose purpose is to emulate grep and/or ack.\r\nPowerShell already has the built-in Select-String cmdlet, but this script wraps\r\nprovides match highlighting on top of the searching capabilities.\r\n\r\nIt currently highlights matches in a similar style to ack.\r\n\r\n## Examples:\r\n\r\nFind all usages of `form` in all .cs files:\r\n\r\n    find-string form *.cs\r\n\r\nFind the unique file extensions from all of the files that have the string\r\n'jquery' in them:\r\n\r\n    find-string jquery -passThru | \r\n      Select-Object -ExpandProperty Path | \r\n      Select-String '.\\.(\\w+)$' | \r\n      Select-Object -ExpandProperty Matches | \r\n      ForEach-Object { $_.Groups[1].Value } | \r\n      Select-Object -Unique\r\n\r\nOr the same example using built-in aliases (more succinct, likely reflects more\r\ntypical usage):\r\n\r\n    find-string jquery -pass | \r\n      select -expand path | \r\n      grep '.\\.(\\w+)$' | \r\n      select -expand matches | \r\n      %{ $_.groups[1].value } | \r\n      select -uniq\r\n \r\n## Installation:\r\n\r\nFind-String has [PsGet](http://psget.net/) support - once you have PsGet\r\ninstalled, all you have to do is run `Install-Module Find-String` and the\r\nFind-String command is ready for you.\r\n\r\n## Usage:\r\n\r\n    NAME\r\n        c:\\MyScriptDir\\Find-String.ps1\r\n\r\n    SYNOPSIS\r\n        Searches text files by pattern and displays the results.\r\n\r\n    SYNTAX\r\n        Find-String [-pattern] <Regex> [-filter] <String> [-path <String[]>] \r\n        [-recurse] [-caseSensitive] [-context <Int32[]>] [-passThru] [-pipeOutput] \r\n        [<CommonParameters>]\r\n\r\n        Find-String [-pattern] <Regex> [-include] <String[]> [-path<String[]>] \r\n        [-recurse] [-caseSensitive] [-context <Int32[]>] [-passThru] [-pipeOutput] \r\n        [<CommonParameters>]\r\n\r\n\r\n    DESCRIPTION\r\n        Searches text files by pattern and displays the results.\r\n\r\n\r\n    PARAMETERS\r\n        -pattern <Regex>\r\n            Specifies the text to find. Type a string or regular expression.\r\n\r\n            Required?                    true\r\n            Position?                    1\r\n            Default value\r\n            Accept pipeline input?       false\r\n            Accept wildcard characters?\r\n\r\n        -filter <String>\r\n            Specifies the file types to search in. The default is all file types (*.*).\r\n\r\n            Required?                    true\r\n            Position?                    2\r\n            Default value\r\n            Accept pipeline input?       false\r\n            Accept wildcard characters?\r\n\r\n        -include <String[]>\r\n            Specifies the file types to search in. This allows you to search across multiple file types (i.e. *.\r\n            ps1,*.psm1).\r\n\r\n            Required?                    true\r\n            Position?                    2\r\n            Default value\r\n            Accept pipeline input?       false\r\n            Accept wildcard characters?\r\n\r\n        -path <String[]>\r\n            Specifies the path to the files to be searched. Wildcards are permitted. \r\n            The default location is the local directory.\r\n\r\n            Required?                    false\r\n            Position?                    named\r\n            Default value\r\n            Accept pipeline input?       false\r\n            Accept wildcard characters?\r\n\r\n        -recurse [<SwitchParameter>]\r\n            Gets the items in the specified path and in all child directies. This is \r\n            the default.\r\n\r\n            Required?                    false\r\n            Position?                    named\r\n            Default value\r\n            Accept pipeline input?       false\r\n            Accept wildcard characters?\r\n\r\n        -caseSensitive [<SwitchParameter>]\r\n            Makes matches case-sensitive. By default, matches are not case-sensitive.\r\n\r\n            Required?                    false\r\n            Position?                    named\r\n            Default value\r\n            Accept pipeline input?       false\r\n            Accept wildcard characters?\r\n\r\n        -context <Int32[]>\r\n            Captures the specified number of lines before and after the line with the \r\n            match. This allows you to view the match in context.\r\n\r\n            Required?                    false\r\n            Position?                    named\r\n            Default value\r\n            Accept pipeline input?       false\r\n            Accept wildcard characters?\r\n\r\n        -passThru [<SwitchParameter>]\r\n            Passes the literal MatchInfo object representing the found match to the \r\n            pipeline. By default, this cmdlet does not send anything through the \r\n            object pipeline.\r\n\r\n            Required?                    false\r\n            Position?                    named\r\n            Default value\r\n            Accept pipeline input?       false\r\n            Accept wildcard characters?\r\n\r\n        -pipeOutput [<SwitchParameter>]\r\n            Sends all output along the object pipeline. By default, this command uses \r\n            color to help with readability; however, this prevents the output from being \r\n            piped to another command. If you wish to pipe the output of this command to\r\n            something else, be sure to use this parameter.\r\n\r\n            requires -version 2\r\n\r\n            Required?                    false\r\n            Position?                    named\r\n            Default value\r\n            Accept pipeline input?       false\r\n            Accept wildcard characters?\r\n"}